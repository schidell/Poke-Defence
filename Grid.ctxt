#BlueJ class context
comment0.params=tilesAcross\ tilesDown\ width\ length\ scene
comment0.target=Grid(int,\ int,\ int,\ int,\ char)
comment0.text=\n\ Creates\ a\ grid\ of\ varying\ dimensions\ and\ tile\ size\ using\ a\ 2d\ array.\n\ \n\ @param\ tilesAcross\ Amount\ of\ tiles\ wanted\ horizontally.\ Must\ be\ greater\ than\ 0.\n\ @param\ tilesDown\ Amount\ of\ tiles\ wanted\ vertically.\ Must\ be\ greater\ than\ 0.\n\ @param\ width\ Width\ of\ the\ tile.\ Must\ be\ greater\ than\ 0.\ The\ tile\ width\ multiplied\ by\ the\ amount\ of\ tiles\ across\ must\ be\ equal\ to\ or\ less\ than\ the\ world\ size.\n\ @param\ length\ Length\ of\ the\ tile.\ Must\ be\ greater\ than\ 0.\ The\ tile\ length\ multiplied\ by\ the\ amount\ of\ tiles\ down\ must\ be\ greater\ or\ equal\ to\ the\ world\ size.\n\ @param\ scene\ Character\ used\ to\ differentiate\ the\ different\ scenes.\ u\:\ underwater,\ f\:\ fire,\ g\:\ grass\n
comment1.params=array\ width\ length\ scene
comment1.target=Grid(char[][],\ int,\ int,\ char)
comment1.text=\n\ Creates\ a\ grid\ of\ varying\ dimensions\ and\ tile\ size\ using\ a\ 2d\ array\ based\ off\ of\ a\ 2d\ character\ array.\n\ \n\ @param\ array\ A\ 2d\ array\ of\ characters\ used\ to\ create\ the\ grid.\n\ @param\ width\ Width\ of\ the\ tile.\ Must\ be\ greater\ than\ 0.\ The\ tile\ width\ multiplied\ by\ the\ amount\ of\ tiles\ across\ must\ be\ equal\ to\ or\ less\ than\ the\ world\ size.\n\ @param\ length\ Length\ of\ the\ tile.\ Must\ be\ greater\ than\ 0.\ The\ tile\ length\ multiplied\ by\ the\ amount\ of\ tiles\ down\ must\ be\ greater\ or\ equal\ to\ the\ world\ size.\n\ @param\ scene\ Character\ used\ to\ differentiate\ the\ different\ scenes.\ u\:\ underwater,\ f\:\ fire,\ g\:\ grass\n
comment2.params=
comment2.target=int\ getTilesAcross()
comment2.text=\n\ Getter\ method\ for\ the\ amount\ of\ tiles\ across\n\ \n\ @return\ int\ Amount\ of\ tiles\ across\n
comment3.params=
comment3.target=int\ getTilesDown()
comment3.text=\n\ Getter\ method\ for\ the\ amount\ of\ tiles\ adown\n\ \n\ @return\ int\ Amount\ of\ tiles\ down\n
comment4.params=
comment4.target=int\ getTileWidth()
comment4.text=\n\ Getter\ method\ for\ the\ width\ of\ the\ tiles\n\ \n\ @return\ int\ Width\ of\ a\ tile\n
comment5.params=
comment5.target=int\ getTileLength()
comment5.text=\n\ Getter\ method\ for\ the\ length\ of\ the\ tiles\n\ \n\ @return\ int\ Length\ of\ a\ tile\n
comment6.params=xCoord\ yCoord
comment6.target=char\ getState(int,\ int)
comment6.text=\n\ Getter\ method\ for\ the\ state\ of\ a\ tile\ at\ a\ specified\ coordinate\n\ \n\ @param\ xCoord\ x-coordinate\ of\ the\ location\ you\ want\ the\ state\ of\n\ @param\ yCoord\ y-coordinate\ of\ the\ location\ you\ want\ the\ state\ of\n\ @return\ int\ Character\ that\ tells\ the\ state\ of\ the\ tile\ (1\ -->\ obstacle,\ p\ -->\ path,\ a\ -->\ empty1,\ b\ -->\ empty2,\ s-->\ start,\ f\ -->\ finish)\n
comment7.params=
comment7.target=void\ loadLocations()
comment7.text=\n\ Loads\ the\ locations\ onto\ the\ grid\n
comment8.params=xCoord\ yCoord\ state
comment8.target=void\ setState(int,\ int,\ char)
comment8.text=\n\ Sets\ the\ state\ of\ a\ tile\ at\ a\ specified\ location.\n\ \n\ @param\ xCoord\ x-coordinate\ of\ the\ location\ you\ want\ the\ set\ the\ state\ of\n\ @param\ yCoord\ y-coordinate\ of\ the\ location\ you\ want\ to\ set\ the\ state\ of\n\ @param\ state\ The\ state\ you\ want\ to\ set\ to\ (1\ -->\ obstacle,\ p\ -->\ path,\ a\ -->\ empty1,\ b\ -->\ empty2,\ s-->\ start,\ f\ -->\ finish)\n
numComments=9
